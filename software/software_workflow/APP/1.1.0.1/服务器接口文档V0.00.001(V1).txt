1.设备信息的操作接口
	操作软件(rabbitmq客户端)与服务器(rabbitmq服务端)通信数据使用json格式格式
	设备基本信息:
	{"序列号": "sn000001", "机器型号":"P440","机器名称":"重庆1号机"，" 客户名称"："重庆达优"，"地址":"中国重庆市沙坪坝25号",
	"控制卡硬件版本:"V2", "电机类型":"步科"，"振镜类型:":"菲镭钛克","激光类型":"斯派特"，"操作软件版本":"V1.01.001"，"主控卡软件版本":"V1.01.001"，
	"模拟卡软件版本":"V1.01.002"，"报文时间": "2024-03-18 15:30:45"}
	mongdb数据库和表名称：device_info(库): device_base(表)
	客户端每次软件初始化时上报一次
	操作软件->服务器：MQ消息通道：device_base_info
	服务器->操作软件：MQ消息通道：device_base_info_sn000001_res
	基本信息表插入操作响应
	{"序列号": "sn000001", "表": "设备基本信息", "错误":"","报文时间": "2024-03-18 15:30:45"}
	未收到响应时，重试3次

	后端fastapi接口
	1.查询当前账号拥有设备的所有客户名称
		URL: http://192.168.130.168:80/deviceInfo/base/customer/names/?token="xxx"
		接口：@app.get("/deviceInfo/base/customer/names/")
				async def device_base_info_customers(token:str):
		返回格式: {"错误"："", "客户列表":{"客户":"重庆达优"，"客户":"深圳领航"}}

	2.查询指定客户的所有设备序列号，机器名称
		URL: http://192.168.130.168:80/deviceInfo/base/customer/devices/?客户=重庆达优&token="xxx"
		接口：@app.get("/deviceInfo/base/customer/devices/")
				async def device_base_info_devices(customer: str，token: str):
		返回格式: {"错误"："", "设备列表":{{"序列号":"sn000001"，"机器名称":"重庆1号机"}，{"序列号":"sn000002"，"机器名称":"重庆2号机"}}

	3.客户端查询指定序列号设备信息(数据库最新一条信息)
		URL: http://192.168.130.168:80/deviceInfo/base/sn/?sn=sn000001&token="xxx"
		接口：@app.get("/deviceInfo/base/sn/")
				async def device_base_info_state_sn(sn: str,token: str):
		返回格式：{"错误"：""，"序列号": "sn000001", "机器型号":"P440","机器名称":"重庆1号机"，客户名称"："重庆达优"，"地址":"中国重庆市沙坪坝25号",
					"控制卡硬件版本:"V2", "电机类型":"步科"，"振镜类型:":"菲镭钛克","激光类型":"斯派特"，"操作软件版本":"V1.01.001"，"主控卡软件版本":"V1.01.001"，
					"模拟卡软件版本":"V1.01.002"，"报文时间": "2024-03-18 15:30:45"}

	4.客户端查询指定名称设备信息(数据库最新一条信息)
		URL: http://192.168.130.168:80/deviceInfo/base/device/?客户=重庆达优&token="xxx"
		接口：@app.get("deviceInfo/base/device/")
				async def device_base_info_state_device(device: str, token:str):
		返回格式：{"错误"：""，"序列号": "sn000001", "机器型号":"P440","机器名称":"重庆1号机"，客户名称"："重庆达优"，"地址":"中国重庆市沙坪坝25号",
					"控制卡硬件版本:"V2", "电机类型":"步科"，"振镜类型:":"菲镭钛克","激光类型":"斯派特"，"操作软件版本":"V1.01.001"，"主控卡软件版本":"V1.01.001"，
					"模拟卡软件版本":"V1.01.002"，"报文时间": "2024-03-18 15:30:45"}

	错误码说明：1.查询条件不存在时，返回：参数查询为空
				2.查询出错时，返回：数据库操作异常字符串
				3.正常时，返回：空字符串("")
				3.token检验失败时，返回：token已失效，请重新登录

	设备流程信息:
	机器软件打开时是开机状态
	{"序列号": "sn000001", "报文时间": "2024-03-18 15:30:45"，"机器型号":"P440","机器名称":"重庆1号机", "地址":"中国重庆市沙坪坝25号2层", "设备状态":"开机"，"开机时间","2024-03-18 15:30:45"}
	机器初始化成功后，打印状态是初始化成功状态，失败时是初始化失败
	{"序列号": "sn000001", "报文时间": "2024-03-18 15:30:45"，"机器型号":"P440","机器名称":"重庆1号机", "地址":"中国重庆市沙坪坝25号2层", "设备状态":"初始化成功"，"上电时间","2024-03-18 15:30:45"}
	设备流程开启/暂停/继续/退出信息:
	{"序列号": "sn000001", "报文时间": "2024-03-18 15:30:45"，"机器型号":"P440","机器名称":"重庆1号机", "地址":"中国重庆市沙坪坝25号2层","设备状态":"开始打印"}
	设备流程预热信息:
	{"序列号": "sn000001", "报文时间": "2024-03-18 15:30:45"，"机器型号":"P440","机器名称":"重庆1号机", "地址":"中国重庆市沙坪坝25号2层","设备状态":"预热", "预热时长":"20"，预热温度:"150"}
	预热时长单位是分钟，表示设置的预热时间
	设备流程预热完成信息:
	{"序列号": "sn000001", "报文时间": "2024-03-18 15:30:45"，"机器型号":"P440","机器名称":"重庆1号机", "地址":"中国重庆市沙坪坝25号2层","设备状态":"预热完成", "预热时长":"20"}
	预热时长单位是分钟，表示实际的预热时间
	设备流程刮粉信息:
	{"序列号": "sn000001", "报文时间": "2024-03-18 15:30:45"，"机器型号":"P440","机器名称":"重庆1号机", "地址":"中国重庆市沙坪坝25号2层","设备状态":"刮粉", "刮粉层数":"20"}
	刮粉时长单位是分钟，表示实际的刮粉时间
	设备流程刮粉完成信息:
	{"序列号": "sn000001", "报文时间": "2024-03-18 15:30:45"，"机器型号":"P440","机器名称":"重庆1号机", "地址":"中国重庆市沙坪坝25号2层","设备状态":"刮粉完成", "刮粉时长":"20"}
	设备流程打印信息:
	{"序列号": "sn000001", "报文时间": "2024-03-18 15:30:45"，"机器型号":"P440","机器名称":"重庆1号机", "地址":"中国重庆市沙坪坝25号2层","设备状态":"打印"，
	"打印开始时间","2024-03-18 15:30:45", "打印结束时间","2024-03-18 15:30:45"，
	"打印时长":"60", "打印层数": "1"，"当前层号"："100", "当前层打印面积": "360"}
	设备流程打印完成信息:
	{"序列号": "sn000001", "报文时间": "2024-03-18 15:30:45"，"机器型号":"P440","机器名称":"重庆1号机", "地址":"中国重庆市沙坪坝25号2层","设备状态":"打印完成"，
	"打印开始时间","2024-03-18 15:30:45", "打印结束时间","2024-03-18 15:30:45"，
	"打印时长":"60", "打印层数": "3600"}
	打印时长单位是分钟，表示当前层打印的时间，层的打印面积单位是平方毫米，当前层打印时间单位是秒
	操作软件->服务器：MQ消息通道：device_process_info
	服务器->操作软件：MQ消息通道：device_process_info_sn000001_res
	mongdb数据库和表名称：device_info(库): device_process(表)
	流程信息表插入操作响应
	{"序列号": "sn000001", "表": "设备流程信息", "错误":"", "报文时间": "2024-03-18 15:30:45"}
	
	后端fastapi接口
	1.查询当前账号拥有设备的所有客户名称
		URL: http://192.168.130.168:80/deviceInfo/base/customer/names/?token="xxx"
		接口：@app.get("/deviceInfo/base/customer/names/")
				async def device_base_info_customers(token:str):
		返回格式: {"错误"："", "客户列表":{"客户":"重庆达优"，"客户":"深圳领航"}}

	2.查询指定客户的所有设备序列号，机器名称
		URL: http://192.168.130.168:80/deviceInfo/base/customer/devices/?客户=重庆达优&token="xxx"
		接口：@app.get("/deviceInfo/base/customer/devices/")
				async def device_base_info_devices(customer: str，token: str):
		返回格式: {"错误"："", "设备列表":{{"序列号":"sn000001"，"机器名称":"重庆1号机"}，{"序列号":"sn000002"，"机器名称":"重庆2号机"}}

	3.客户端查询指定序列号设备所有信息流程信息(当前设备状态时skip=0,limit=1)
		URL: http://192.168.130.168:80/deviceInfo/process/sn/?sn=sn000001&token="xxx"&skip=1200&limit=20
		接口：@app.get("/deviceInfo/process/sn/")
				async def device_process_info_sn(sn: str, token:str, skip: int = 0, limit: int = 20):
				返回格式：{"错误"："","信息"：[{设备流程信息1},{设备流程信息1}]}

	4.客户端查询指定序列号设备时间范围内信息流程信息
		URL: http://192.168.130.168:80/deviceInfo/process/sn/?sn=sn000001&token="xxx"&&min_time=1200&max_time=1220
		接口：@app.get("/deviceInfo/process/sn/")
				async def device_process_info_time(sn: str, token:str,min_time: int, max_time: int, skip: int = 0, limit: int = 20):
				返回格式：{"错误"："","信息"：[{设备流程信息1},{设备流程信息1}]}

	错误码说明：1.查询条件不存在时，返回：参数查询为空
				2.查询出错时，返回：数据库操作异常字符串
				3.正常时，返回：空字符串("")
				3.token检验失败时，返回：token已失效，请重新登录

	
	设备流程表操作响应(rabbitmq)
	{"序列号": "sn000001", "设备状态":"预热完成"，"错误":"", "报文时间": "2024-03-18 15:30:45"}
	流程表操作成功时，错误码是空字符串，否则返回数据操作错误原因或报文格式错误
	

	设备异常信息：
	软件运行后，有异常上报
	{"序列号": "sn000001", "报文时间": "2024-03-18 15:30:45"，"机器型号":"P440","机器名称":"重庆1号机", "地址":"中国重庆市沙坪坝25号2层", "异常等级":"故障","异常描述","电机运动超时"}
	设备异常表操作响应
	{"序列号": "sn000001", "表":"设备异常"，"错误":"", "报文时间": "2024-03-18 15:30:45"}
	设备异常表操作成功时，错误码是空字符串，否则返回数据操作错误原因或报文格式错误
	mongdb数据库和表名称：device_info(库): device_error_info(表)
	操作软件->服务器：MQ消息通道：device_error_info
	服务器->操作软件：MQ消息通道：device_error_info_sn000001_res
	
	后端fastapi接口
	1.客户端查询指定序列号错误信息(当前设备状态时skip=0,limit=1)
		URL: http://192.168.130.168:80/deviceInfo/error/sn/?sn=sn000001&token="xxx"&skip=1200&limit=20&error=1&warn=1&prompt=1
		接口：@app.get("/deviceInfo/error/sn/")
				async def device_error_info_sn(sn: str, token:str, skip: int = 0, limit: int = 20, error: int = 0, warn: int = 0， prompt: int = 0):
				返回格式{"故障"："电机异常","故障"："电机异常","报警"："电机异常"}

2.设备授权的操作接口
	操作软件(rabbitmq客户端)打印时，向服务器(rabbitmq服务端)请求授权，服务器返回授权是否成功，成功后设备进入打印流程，不成功弹窗提示且不能进入打印流程
	查询授权:
	{"序列号": "sn000001", "机器型号":"P440","机器名称":"重庆1号机","地址":"中国重庆市沙坪坝25号","客户名称"："重庆达优"，"查询授权"："1"}
	查询授权时，字段填1
	授权结果
	{"序列号": "sn000001", "错误":"","授权"："1", "报文时间": "2024-03-18 15:30:45"}
	授权通过时，授权是1，否则结果是0
	授权通过时，错误码是空字符串，否则
				当序列号，机器型号，机器名称，地址，客户名称和设备基本信息不一致时，返回：设备信息不一致，授权不通过
				当缺少字段时，返回：报文格式错误
				当授权不通过时，返回：授权不通过0

	服务器授权表定义：
	{"序列号": "sn000001", "机器型号":"P440","机器名称":"重庆1号机","地址":"中国重庆市沙坪坝25号","客户名称"："重庆达优"，"授权截止时间"："2024-03-18 15:30:45"，
	"创建时间"："2024-03-18 15:30:45", "修改时间"："2024-03-18 15:30:45"}
	更改授权时间时，记录更改日志
	
	
	操作软件->服务器：MQ消息通道：device_auth
	服务器->操作软件：MQ消息通道：device_auth_sn000001_res
	mongdb数据库和表名称：device_info(库): device_auth(表)
	
	后端fastapi接口
	1.授权客户端查询指定序列号授权信息
		URL: http://192.168.130.168:80/deviceInfo/auth/sn/?sn=sn000001&token="xxx"
		接口：@app.get("/deviceInfo/auth/sn/")
				async def device_auth_sn(sn: str，token: str, time:int = 0):
				没有time字段时，是查询信息，返回格式{"序列号"："sn000001", "授权截止时间"："2024-03-18 15:30:45"}
		

	2.授权客户端设置设置序列号设备授权信息
		URL: http://192.168.130.168:80/deviceInfo/auth/sn/?sn=sn000001&token="xxx"&time=120
		接口：@app.get("/deviceInfo/auth/sn/")
				async def device_auth_sn(sn: str, token: str, time:int = 0):
		有time字段时，是设置信息，返回格式{"序列号"："sn000001", "授权截止时间"："2024-03-18 15:30:45"}	

	需求：
	1.客户端打印时查询授权，向服务器查询请求(使用TLS加密通信)
	2.客户端授权失败时重试3次(发送授权请求后，阻塞或延时3秒后查询授权结果，如果超时3秒未收到授权响应，等待10秒后重试)
	3.服务器收到授权查询时，向设备授权信息表查询设备的授权时间是否过期，过期时返回授权失败，否侧返回授权成功
	4.客户端接收授权成功时，校验响应消息可进入打印，授权失败时，弹框提示且不可进入流程
	5.关键事件：查询授权(发送和接收，是否成功)，授权响应(接收和响应)，记录日志
	
3.账号操作接口
	账号定义表：
	{"账号名"："张三"，"密码":"密码哈希"，"创建时间":"2024-03-18 15:30:45","更新时间":"2024-03-18 15:30:45"}
	账号会话凭证
	{"账号名"："张三"，"token":"uuid(截取12位)"，"创建时间":"2024-03-18 15:30:45","失效时间":"2024-03-18 15:30:45"}
	
	mongdb数据库和表名称：user(库): user_account(表)
	mongdb数据库和表名称：user(库): user_session(表)
	
	后端fastapi接口
	1.账号登录
		URL: http://192.168.130.168:80/login/?"账号名"="张三"&"密码"=“密码哈希”
		接口：@app.get("/login/")
				async def device_user_login(name: str，passwd: str):
				返回格式{"error"："", "登录结果"："成功或失败"，"token":"uuid12位"}
			登录通过时，错误码是空字符串
			登录不通过时，错误码是“账号或密码错误”
			其他数据库操作错误时，返回具体错误
			
		    登录成功后，服务器自动更新账号会话表，生成账号登录会话的token
			
4.异常处理
	服务器，错误信息使用配置文件保存，发生错误时，从json配置文件获取具体错误信息返回